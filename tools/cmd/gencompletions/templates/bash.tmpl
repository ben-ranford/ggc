# bash completion for ggc
# Code generated by go run tools/cmd/gencompletions/main.go; DO NOT EDIT.

_ggc()
{
    local cur prev opts subopts
    COMPREPLY=()
    cur="${COMP_WORDS[COMP_CWORD]}"
    prev="${COMP_WORDS[COMP_CWORD-1]}"

    opts="{{ .TopLevelList }}"
    case ${prev} in
{{- range .Commands }}
{{- if and .IncludeInCase (gt (len .Subcommands) 0) }}
        {{ .Name }})
            subopts="{{ .SubcommandList }}"
            COMPREPLY=( $(compgen -W "${subopts}" -- ${cur}) )
            return 0
            ;;
{{- end }}
{{- end }}
    esac

    if [[ ${COMP_CWORD} == 1 ]]; then
        COMPREPLY=( $(compgen -W "${opts}" -- ${cur}) )
        return 0
    fi

{{- range .Commands }}
{{- $cmd := . }}
{{- range $cmd.KeywordSubcommands }}
    if [[ ${COMP_WORDS[1]} == "{{ $cmd.Name }}" && ${COMP_WORDS[2]} == "{{ .Name }}" ]]; then
        COMPREPLY=( $(compgen -W "{{ .KeywordList }}" -- ${cur}) )
        return 0
    fi
{{- end }}
{{- end }}

    if [[ ${COMP_WORDS[1]} == "branch" && ${COMP_WORDS[2]} == "checkout" ]]; then
        local branches candidates
        branches=$(ggc __complete branch 2>/dev/null)
        candidates="${branches} {{ .BranchCheckoutKeywordList }}"
        COMPREPLY=( $(compgen -W "${candidates}" -- ${cur}) )
        return 0
    fi

    if [[ ${COMP_WORDS[1]} == "add" ]]; then
        local files candidates extras
{{- with index .CommandMap "add" }}
        extras="{{ .SubcommandList }}"
{{- else }}
        extras=""
{{- end }}
        candidates="${extras}"
        files=$(ggc __complete files 2>/dev/null)
        if [[ -n ${files} ]]; then
            candidates="${candidates} ${files}"
        fi
        COMPREPLY=( $(compgen -W "${candidates}" -- ${cur}) )
        return 0
    fi

    if [[ ${COMP_WORDS[1]} == "rebase" && ${COMP_CWORD} -eq 2 ]]; then
        case ${cur} in
            continue|abort|skip|interactive)
                ;;
            *)
                local branches
                branches=$(ggc __complete branch 2>/dev/null)
                COMPREPLY=( $(compgen -W "${branches}" -- ${cur}) )
                return 0
                ;;
        esac
    fi
}

complete -F _ggc ggc
